{"version":3,"file":"component---src-pages-index-jsx-a907b9d9b9e89f9997a4.js","mappings":"8MAQA,MAoBaA,EAAOC,IAAA,IAAC,SAAEC,GAAUD,EAAA,OAAKE,EAAAA,cAACC,EAAAA,EAAG,CAACC,MAAM,OAAOC,KAAMJ,EAASK,UAAY,EAqCnF,UAzDkBC,IAIX,IAHLC,MACEC,mBAAmB,MAAEC,KAExBH,EACC,MAAMI,EAAQD,EACXE,QAAOC,KAAUA,EAAKC,KAAKC,YAAYC,OACvCC,KAAIJ,GAAQX,EAAAA,cAACgB,EAAAA,EAAQ,CAACC,IAAKN,EAAKC,KAAKM,GAAIC,KAAMR,EAAKC,SAEvD,OACEZ,EAAAA,cAACoB,EAAAA,EAAM,KACLpB,EAAAA,cAAA,WAASqB,UAAU,UACjBrB,EAAAA,cAAA,MAAIqB,UAAU,sBAAqB,SAEnCrB,EAAAA,cAAA,OAAKqB,UAAU,uBAAuBZ,IAEjC,C,qFC+Cb,IA/DiBJ,IAAe,IAAd,KAAEc,GAAMd,EACxB,MAAMiB,GAAcC,EAAAA,EAAAA,GAAOJ,EAAKN,YAAYW,gBAItC,KAAEC,GAASN,EAAKN,YAEtB,OACEb,EAAAA,cAAA,OAAKqB,UAAU,uBACbrB,EAAAA,cAAC0B,EAAAA,KAAI,CACHC,GAAIR,EAAKS,OAAOC,QAChBR,UAAU,uHACVS,MAAO,CACLC,gBAAkB,OAAMT,KACxBU,mBAAoB,iBAEtB9B,MAAOiB,EAAKN,YAAYX,QAE1BF,EAAAA,cAAA,OAAKqB,UAAU,wMACbrB,EAAAA,cAAC0B,EAAAA,KAAI,CAACC,GAAIR,EAAKS,OAAOC,SACpB7B,EAAAA,cAAA,OAAKqB,UAAU,QACbrB,EAAAA,cAAA,OAAKqB,UAAU,+CACZF,EAAKN,YAAYX,OAEpBF,EAAAA,cAAA,KAAGqB,UAAU,kCAAkCF,EAAKc,WAGxDjC,EAAAA,cAAA,OAAKqB,UAAU,iBACbrB,EAAAA,cAAA,OAAKqB,UAAU,qBACbrB,EAAAA,cAAA,KAAGqB,UAAU,cAAcF,EAAKN,YAAYC,OAE9Cd,EAAAA,cAAA,OAAKqB,UAAU,6BACH,OAATI,GACCA,EAAKV,KAAImB,GACPlC,EAAAA,cAACmC,EAAAA,EAAO,CAAClB,IAAM,GAAEmB,IAAUF,WAAaf,EAAKN,YAAYwB,OAAQH,IAAKA,SAK5E,C","sources":["webpack://zanechua-dot-com/./src/pages/index.jsx","webpack://zanechua-dot-com/./src/components/PostLink.jsx"],"sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\n\nimport Layout from 'components/Layout';\nimport PostLink from 'components/PostLink';\nimport SEO from 'components/SEO';\n\nconst IndexPage = ({\n  data: {\n    allMarkdownRemark: { edges }\n  }\n}) => {\n  const Posts = edges\n    .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\n    .map(edge => <PostLink key={edge.node.id} post={edge.node} />);\n\n  return (\n    <Layout>\n      <section className=\"flex-1\">\n        <h2 className=\"text-2xl font-bold\">Posts</h2>\n\n        <div className=\"flex-1 items-center\">{Posts}</div>\n      </section>\n    </Layout>\n  );\n};\n\nexport const Head = ({ location }) => <SEO title=\"Home\" path={location.pathname} />;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          fields {\n            urlPath\n          }\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            slug\n            title\n            tags\n            featuredImage {\n              childImageSharp {\n                gatsbyImageData\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nIndexPage.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.array\n    })\n  }).isRequired\n};\n\nexport default IndexPage;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport { getSrc } from 'gatsby-plugin-image';\nimport { kebabCase } from 'lodash';\nimport PropTypes from 'prop-types';\n\nimport TagLink from 'components/TagLink';\n\nconst PostLink = ({ post }) => {\n  const featuredSrc = getSrc(post.frontmatter.featuredImage);\n  // const featuredSrcSet = featuredImgFluid.srcSet;\n  // const imageLink = featuredSrcSet.substring(0, featuredSrcSet.indexOf(' 200w'));\n\n  const { tags } = post.frontmatter;\n\n  return (\n    <div className=\"w-full lg:flex py-4\">\n      <Link\n        to={post.fields.urlPath}\n        className=\"block h-56 lg:w-64 lg:h-auto flex-none bg-cover rounded-t lg:rounded-t-none lg:rounded-l text-center overflow-hidden\"\n        style={{\n          backgroundImage: `url(${featuredSrc})`,\n          backgroundPosition: 'center center'\n        }}\n        title={post.frontmatter.title}\n      />\n      <div className=\"flex-1 border-r border-b border-l border-gray-800 lg:border-l-0 lg:border-t lg:border-gray-700 rounded-b lg:rounded-b-none lg:rounded-r p-4 flex flex-col justify-between leading-normal bg-gray-800\">\n        <Link to={post.fields.urlPath}>\n          <div className=\"mb-8\">\n            <div className=\"text-white font-bold text-xl mb-2 text-left\">\n              {post.frontmatter.title}\n            </div>\n            <p className=\"text-white text-base text-left\">{post.excerpt}</p>\n          </div>\n        </Link>\n        <div className=\"flex flex-row\">\n          <div className=\"flex pr-2 text-sm\">\n            <p className=\"text-white\">{post.frontmatter.date}</p>\n          </div>\n          <div className=\"flex-1 ml-auto text-right\">\n            {tags !== null &&\n              tags.map(tag => (\n                <TagLink key={`${kebabCase(tag)}-post-${post.frontmatter.slug}`} tag={tag} />\n              ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nPostLink.propTypes = {\n  post: PropTypes.shape({\n    excerpt: PropTypes.string,\n    fields: PropTypes.shape({\n      urlPath: PropTypes.string\n    }),\n    frontmatter: PropTypes.shape({\n      slug: PropTypes.string,\n      title: PropTypes.string,\n      tags: PropTypes.arrayOf(PropTypes.string),\n      date: PropTypes.string,\n      featuredImage: PropTypes.shape({\n        childImageSharp: PropTypes.shape({\n          gatsbyImageData: PropTypes.any\n        })\n      })\n    })\n  }).isRequired\n};\n\nexport default PostLink;\n"],"names":["Head","_ref2","location","React","SEO","title","path","pathname","_ref","data","allMarkdownRemark","edges","Posts","filter","edge","node","frontmatter","date","map","PostLink","key","id","post","Layout","className","featuredSrc","getSrc","featuredImage","tags","Link","to","fields","urlPath","style","backgroundImage","backgroundPosition","excerpt","tag","TagLink","_kebabCase","slug"],"sourceRoot":""}