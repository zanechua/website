{"version":3,"file":"component---src-pages-index-jsx-842a6b7aa971fdeb2c4f.js","mappings":"uLAuEA,IA/DiBA,IAAe,IAAd,KAAEC,GAAMD,EACxB,MAAME,GAAcC,EAAAA,EAAAA,GAAOF,EAAKG,YAAYC,gBAItC,KAAEC,GAASL,EAAKG,YAEtB,OACEG,EAAAA,cAAA,OAAKC,UAAU,uBACbD,EAAAA,cAACE,EAAAA,KAAI,CACHC,GAAIT,EAAKU,OAAOC,QAChBJ,UAAU,uHACVK,MAAO,CACLC,gBAAgB,OAAQZ,EAAW,IACnCa,mBAAoB,iBAEtBC,MAAOf,EAAKG,YAAYY,QAE1BT,EAAAA,cAAA,OAAKC,UAAU,wMACbD,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAIT,EAAKU,OAAOC,SACpBL,EAAAA,cAAA,OAAKC,UAAU,QACbD,EAAAA,cAAA,OAAKC,UAAU,+CACZP,EAAKG,YAAYY,OAEpBT,EAAAA,cAAA,KAAGC,UAAU,kCAAkCP,EAAKgB,WAGxDV,EAAAA,cAAA,OAAKC,UAAU,iBACbD,EAAAA,cAAA,OAAKC,UAAU,qBACbD,EAAAA,cAAA,KAAGC,UAAU,cAAcP,EAAKG,YAAYc,OAE9CX,EAAAA,cAAA,OAAKC,UAAU,6BACH,OAATF,GACCA,EAAKa,KAAIC,GACPb,EAAAA,cAACc,EAAAA,EAAO,CAACC,IAAQC,IAAUH,GAAI,SAASnB,EAAKG,YAAYoB,KAAQJ,IAAKA,SAK5E,C,4GCvCV,MAoBaK,EAAOC,IAAA,IAAC,SAAEC,GAAUD,EAAA,OAAKnB,EAAAA,cAACqB,EAAAA,EAAG,CAACZ,MAAM,OAAOa,KAAMF,EAASG,UAAY,EAqCnF,UAzDkB9B,IAIX,IAHL+B,MACEC,mBAAmB,MAAEC,KAExBjC,EACC,MAAMkC,EAAQD,EACXE,QAAOC,KAAUA,EAAKC,KAAKjC,YAAYc,OACvCC,KAAIiB,GAAQ7B,EAAAA,cAAC+B,EAAAA,EAAQ,CAAChB,IAAKc,EAAKC,KAAKE,GAAItC,KAAMmC,EAAKC,SAEvD,OACE9B,EAAAA,cAACiC,EAAAA,EAAM,KACLjC,EAAAA,cAAA,WAASC,UAAU,UACjBD,EAAAA,cAAA,MAAIC,UAAU,sBAAqB,SAEnCD,EAAAA,cAAA,OAAKC,UAAU,uBAAuB0B,IAEjC,C","sources":["webpack://zanechua-dot-com/./src/components/PostLink.jsx","webpack://zanechua-dot-com/./src/pages/index.jsx"],"sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport { getSrc } from 'gatsby-plugin-image';\nimport { kebabCase } from 'lodash';\nimport PropTypes from 'prop-types';\n\nimport TagLink from 'components/TagLink';\n\nconst PostLink = ({ post }) => {\n  const featuredSrc = getSrc(post.frontmatter.featuredImage);\n  // const featuredSrcSet = featuredImgFluid.srcSet;\n  // const imageLink = featuredSrcSet.substring(0, featuredSrcSet.indexOf(' 200w'));\n\n  const { tags } = post.frontmatter;\n\n  return (\n    <div className=\"w-full lg:flex py-4\">\n      <Link\n        to={post.fields.urlPath}\n        className=\"block h-56 lg:w-64 lg:h-auto flex-none bg-cover rounded-t lg:rounded-t-none lg:rounded-l text-center overflow-hidden\"\n        style={{\n          backgroundImage: `url(${featuredSrc})`,\n          backgroundPosition: 'center center'\n        }}\n        title={post.frontmatter.title}\n      />\n      <div className=\"flex-1 border-r border-b border-l border-gray-800 lg:border-l-0 lg:border-t lg:border-gray-700 rounded-b lg:rounded-b-none lg:rounded-r p-4 flex flex-col justify-between leading-normal bg-gray-800\">\n        <Link to={post.fields.urlPath}>\n          <div className=\"mb-8\">\n            <div className=\"text-white font-bold text-xl mb-2 text-left\">\n              {post.frontmatter.title}\n            </div>\n            <p className=\"text-white text-base text-left\">{post.excerpt}</p>\n          </div>\n        </Link>\n        <div className=\"flex flex-row\">\n          <div className=\"flex pr-2 text-sm\">\n            <p className=\"text-white\">{post.frontmatter.date}</p>\n          </div>\n          <div className=\"flex-1 ml-auto text-right\">\n            {tags !== null &&\n              tags.map(tag => (\n                <TagLink key={`${kebabCase(tag)}-post-${post.frontmatter.slug}`} tag={tag} />\n              ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nPostLink.propTypes = {\n  post: PropTypes.shape({\n    excerpt: PropTypes.string,\n    fields: PropTypes.shape({\n      urlPath: PropTypes.string\n    }),\n    frontmatter: PropTypes.shape({\n      slug: PropTypes.string,\n      title: PropTypes.string,\n      tags: PropTypes.arrayOf(PropTypes.string),\n      date: PropTypes.string,\n      featuredImage: PropTypes.shape({\n        childImageSharp: PropTypes.shape({\n          gatsbyImageData: PropTypes.any\n        })\n      })\n    })\n  }).isRequired\n};\n\nexport default PostLink;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\n\nimport Layout from 'components/Layout';\nimport PostLink from 'components/PostLink';\nimport SEO from 'components/SEO';\n\nconst IndexPage = ({\n  data: {\n    allMarkdownRemark: { edges }\n  }\n}) => {\n  const Posts = edges\n    .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\n    .map(edge => <PostLink key={edge.node.id} post={edge.node} />);\n\n  return (\n    <Layout>\n      <section className=\"flex-1\">\n        <h2 className=\"text-2xl font-bold\">Posts</h2>\n\n        <div className=\"flex-1 items-center\">{Posts}</div>\n      </section>\n    </Layout>\n  );\n};\n\nexport const Head = ({ location }) => <SEO title=\"Home\" path={location.pathname} />;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          fields {\n            urlPath\n          }\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            slug\n            title\n            tags\n            featuredImage {\n              childImageSharp {\n                gatsbyImageData\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nIndexPage.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.array\n    })\n  }).isRequired\n};\n\nexport default IndexPage;\n"],"names":["_ref","post","featuredSrc","getSrc","frontmatter","featuredImage","tags","React","className","Link","to","fields","urlPath","style","backgroundImage","backgroundPosition","title","excerpt","date","map","tag","TagLink","key","_kebabCase","slug","Head","_ref2","location","SEO","path","pathname","data","allMarkdownRemark","edges","Posts","filter","edge","node","PostLink","id","Layout"],"sourceRoot":""}