{"version":3,"file":"component---src-templates-blog-post-jsx-c13b2cd17bebc80e3574.js","mappings":"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","sources":["webpack://zanechua-dot-com/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/last.js","webpack://zanechua-dot-com/./node_modules/.pnpm/@react-hook+latest@1.0.3_react@18.3.1/node_modules/@react-hook/latest/dist/module/index.js","webpack://zanechua-dot-com/./node_modules/.pnpm/@react-hook+debounce@3.0.0_react@18.3.1/node_modules/@react-hook/debounce/dist/module/index.js","webpack://zanechua-dot-com/./node_modules/.pnpm/@react-hook+event@1.2.6_react@18.3.1/node_modules/@react-hook/event/dist/module/index.js","webpack://zanechua-dot-com/./node_modules/.pnpm/@react-hook+window-size@3.1.1_react@18.3.1/node_modules/@react-hook/window-size/dist/module/index.js","webpack://zanechua-dot-com/./node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/en-US/_lib/formatDistance.js","webpack://zanechua-dot-com/./node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/_lib/buildFormatLongFn.js","webpack://zanechua-dot-com/./node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/en-US/_lib/formatLong.js","webpack://zanechua-dot-com/./node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/en-US/_lib/formatRelative.js","webpack://zanechua-dot-com/./node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/_lib/buildLocalizeFn.js","webpack://zanechua-dot-com/./node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/_lib/buildMatchFn.js","webpack://zanechua-dot-com/./node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/_lib/buildMatchPatternFn.js","webpack://zanechua-dot-com/./node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/en-US.js","webpack://zanechua-dot-com/./node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/en-US/_lib/localize.js","webpack://zanechua-dot-com/./node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/en-US/_lib/match.js","webpack://zanechua-dot-com/./node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/defaultOptions.js","webpack://zanechua-dot-com/./node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/constants.js","webpack://zanechua-dot-com/./node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/constructFrom.js","webpack://zanechua-dot-com/./node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/toDate.js","webpack://zanechua-dot-com/./node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js","webpack://zanechua-dot-com/./node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/startOfDay.js","webpack://zanechua-dot-com/./node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/differenceInCalendarDays.js","webpack://zanechua-dot-com/./node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/normalizeDates.js","webpack://zanechua-dot-com/./node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/startOfYear.js","webpack://zanechua-dot-com/./node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/getDayOfYear.js","webpack://zanechua-dot-com/./node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/startOfWeek.js","webpack://zanechua-dot-com/./node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/startOfISOWeek.js","webpack://zanechua-dot-com/./node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/getISOWeekYear.js","webpack://zanechua-dot-com/./node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/startOfISOWeekYear.js","webpack://zanechua-dot-com/./node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/getISOWeek.js","webpack://zanechua-dot-com/./node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/getWeekYear.js","webpack://zanechua-dot-com/./node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/startOfWeekYear.js","webpack://zanechua-dot-com/./node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/getWeek.js","webpack://zanechua-dot-com/./node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/addLeadingZeros.js","webpack://zanechua-dot-com/./node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/format/lightFormatters.js","webpack://zanechua-dot-com/./node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/format/formatters.js","webpack://zanechua-dot-com/./node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/format/longFormatters.js","webpack://zanechua-dot-com/./node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/protectedTokens.js","webpack://zanechua-dot-com/./node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/isDate.js","webpack://zanechua-dot-com/./node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/isValid.js","webpack://zanechua-dot-com/./node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/format.js","webpack://zanechua-dot-com/./src/lib/prism-multiline-numbers.js","webpack://zanechua-dot-com/./src/components/CatLoader.jsx","webpack://zanechua-dot-com/./src/components/CommentForm.jsx","webpack://zanechua-dot-com/./node_modules/.pnpm/@sindresorhus+fnv1a@3.1.0/node_modules/@sindresorhus/fnv1a/index.js","webpack://zanechua-dot-com/./src/components/Comment.jsx","webpack://zanechua-dot-com/./src/components/CommentSection.jsx","webpack://zanechua-dot-com/./src/templates/BlogPost.jsx"],"sourcesContent":["/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nmodule.exports = last;\n","import * as React from 'react';\n\nconst useLatest = current => {\n  const storedValue = React.useRef(current);\n  React.useEffect(() => {\n    storedValue.current = current;\n  });\n  return storedValue;\n};\n\nexport default useLatest;","import * as React from 'react';\nimport useLatest from '@react-hook/latest';\nexport const useDebounceCallback = (callback, wait = 100, leading = false) => {\n  const storedCallback = useLatest(callback);\n  const timeout = React.useRef();\n  const deps = [wait, leading, storedCallback]; // Cleans up pending timeouts when the deps change\n\n  function _ref() {\n    timeout.current && clearTimeout(timeout.current);\n    timeout.current = void 0;\n  }\n\n  React.useEffect(() => _ref, deps);\n\n  function _ref2() {\n    timeout.current = void 0;\n  }\n\n  return React.useCallback(function () {\n    // eslint-disable-next-line prefer-rest-params\n    const args = arguments;\n    const {\n      current\n    } = timeout; // Calls on leading edge\n\n    if (current === void 0 && leading) {\n      timeout.current = setTimeout(_ref2, wait); // eslint-disable-next-line prefer-spread\n\n      return storedCallback.current.apply(null, args);\n    } // Clear the timeout every call and start waiting again\n\n\n    current && clearTimeout(current); // Waits for `wait` before invoking the callback\n\n    timeout.current = setTimeout(() => {\n      timeout.current = void 0;\n      storedCallback.current.apply(null, args);\n    }, wait);\n  }, deps);\n};\nexport const useDebounce = (initialState, wait, leading) => {\n  const state = React.useState(initialState);\n  return [state[0], useDebounceCallback(state[1], wait, leading)];\n};","import * as React from 'react';\n\nfunction useEvent(target, type, listener, cleanup) {\n  const storedListener = React.useRef(listener);\n  const storedCleanup = React.useRef(cleanup);\n  React.useEffect(() => {\n    storedListener.current = listener;\n    storedCleanup.current = cleanup;\n  });\n  React.useEffect(() => {\n    const targetEl = target && 'current' in target ? target.current : target;\n    if (!targetEl) return;\n    let didUnsubscribe = 0;\n\n    function listener(...args) {\n      if (didUnsubscribe) return;\n      storedListener.current.apply(this, args);\n    }\n\n    targetEl.addEventListener(type, listener);\n    const cleanup = storedCleanup.current;\n    return () => {\n      didUnsubscribe = 1;\n      targetEl.removeEventListener(type, listener);\n      cleanup && cleanup();\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [target, type]);\n}\n\nexport default useEvent;","import { useDebounce } from '@react-hook/debounce';\nimport useEvent from '@react-hook/event';\nconst emptyObj = {};\nconst win = typeof window === 'undefined' ? null : window;\nconst wv = win && typeof win.visualViewport !== 'undefined' ? win.visualViewport : null;\n\nconst getSize = () => [document.documentElement.clientWidth, document.documentElement.clientHeight];\n\nexport const useWindowSize = function (options) {\n  if (options === void 0) {\n    options = emptyObj;\n  }\n\n  const {\n    wait,\n    leading,\n    initialWidth = 0,\n    initialHeight = 0\n  } = options;\n  const [size, setDebouncedSize] = useDebounce(\n  /* istanbul ignore next */\n  typeof document === 'undefined' ? [initialWidth, initialHeight] : getSize, wait, leading);\n\n  const setSize = () => setDebouncedSize(getSize);\n\n  useEvent(win, 'resize', setSize); // @ts-expect-error\n\n  useEvent(wv, 'resize', setSize);\n  useEvent(win, 'orientationchange', setSize);\n  return size;\n};\nexport const useWindowHeight = options => useWindowSize(options)[1];\nexport const useWindowWidth = options => useWindowSize(options)[0];","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // [TODO] -- I challenge you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // [TODO] -- I challenge you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // [TODO] I challenge you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\nimport { formatLong } from \"./en-US/_lib/formatLong.js\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\nimport { localize } from \"./en-US/_lib/localize.js\";\nimport { match } from \"./en-US/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n\n/**\n * @constant\n * @name constructFromSymbol\n * @summary Symbol enabling Date extensions to inherit properties from the reference date.\n *\n * The symbol is used to enable the `constructFrom` function to construct a date\n * using a reference date and a value. It allows to transfer extra properties\n * from the reference date to the new date. It's useful for extensions like\n * [`TZDate`](https://github.com/date-fns/tz) that accept a time zone as\n * a constructor argument.\n */\nexport const constructFromSymbol = Symbol.for(\"constructDateFrom\");\n","import { constructFromSymbol } from \"./constants.js\";\n\n/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * Starting from v3.7.0, it allows to construct a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from \"./constructFrom/date-fns\";\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date>(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use constructor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   );\n * }\n */\nexport function constructFrom(date, value) {\n  if (typeof date === \"function\") return date(value);\n\n  if (date && typeof date === \"object\" && constructFromSymbol in date)\n    return date[constructFromSymbol](value);\n\n  if (date instanceof Date) return new date.constructor(value);\n\n  return new Date(value);\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * Starting from v3.7.0, it clones a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument, context) {\n  // [TODO] Get rid of `toDate` or `constructFrom`?\n  return constructFrom(context || argument, argument);\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { toDate } from \"../toDate.js\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfDay} function options.\n */\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { millisecondsInDay } from \"./constants.js\";\nimport { startOfDay } from \"./startOfDay.js\";\n\n/**\n * The {@link differenceInCalendarDays} function options.\n */\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - The options object\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const laterStartOfDay = startOfDay(laterDate_);\n  const earlierStartOfDay = startOfDay(earlierDate_);\n\n  const laterTimestamp =\n    +laterStartOfDay - getTimezoneOffsetInMilliseconds(laterStartOfDay);\n  const earlierTimestamp =\n    +earlierStartOfDay - getTimezoneOffsetInMilliseconds(earlierStartOfDay);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((laterTimestamp - earlierTimestamp) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import { constructFrom } from \"../constructFrom.js\";\n\nexport function normalizeDates(context, ...dates) {\n  const normalize = constructFrom.bind(\n    null,\n    context || dates.find((date) => typeof date === \"object\"),\n  );\n  return dates.map(normalize);\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfYear} function options.\n */\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date, options) {\n  const date_ = toDate(date, options?.in);\n  date_.setFullYear(date_.getFullYear(), 0, 1);\n  date_.setHours(0, 0, 0, 0);\n  return date_;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.js\";\nimport { startOfYear } from \"./startOfYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getDayOfYear} function options.\n */\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfISOWeek} function options.\n */\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date, options) {\n  return startOfWeek(date, { ...options, weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeekYear} function options.\n */\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { getISOWeekYear } from \"./getISOWeekYear.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\n\n/**\n * The {@link startOfISOWeekYear} function options.\n */\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date, options) {\n  const year = getISOWeekYear(date, options);\n  const fourthOfJanuary = constructFrom(options?.in || date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeek} function options.\n */\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(options?.in || date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(options?.in || date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (+_date >= +startOfNextYear) {\n    return year + 1;\n  } else if (+_date >= +startOfThisYear) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { getWeekYear } from \"./getWeekYear.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(options?.in || date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { startOfWeekYear } from \"./startOfWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\nexport function getWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.js\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.js\";\nimport { getISOWeek } from \"../../getISOWeek.js\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.js\";\nimport { getWeek } from \"../../getWeek.js\";\nimport { getWeekYear } from \"../../getWeekYear.js\";\n\nimport { addLeadingZeros } from \"../addLeadingZeros.js\";\nimport { lightFormatters } from \"./lightFormatters.js\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(+date / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    return addLeadingZeros(+date, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","import { isDate } from \"./isDate.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertible into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  return !((!isDate(date) && typeof date !== \"number\") || isNaN(+toDate(date)));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { formatters } from \"./_lib/format/formatters.js\";\nimport { longFormatters } from \"./_lib/format/longFormatters.js\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.js\";\nimport { isValid } from \"./isValid.js\";\nimport { toDate } from \"./toDate.js\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date, options?.in);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","// Adapted from https://github.com/PrismJS/prism/blob/master/plugins/line-numbers/prism-line-numbers.js#L82-L172\nconst NEW_LINE_EXP = /\\n(?!$)/g;\n\nfunction getStyles(element) {\n  if (!element) {\n    return null;\n  }\n\n  return window.getComputedStyle ? getComputedStyle(element) : element.currentStyle || null;\n}\n\nfunction resizeElements(elementToResize) {\n  const elements = elementToResize.filter(e => {\n    const codeStyles = getStyles(e);\n    const whiteSpace = codeStyles['white-space'];\n    return whiteSpace === 'pre-wrap' || whiteSpace === 'pre-line';\n  });\n\n  if (elements.length === 0) {\n    return;\n  }\n\n  const infos = elements\n    .map(element => {\n      const codeElement = element.querySelector('code');\n      const lineNumbersWrapper = element.querySelector('.line-numbers-rows');\n      if (!codeElement || !lineNumbersWrapper) {\n        return undefined;\n      }\n\n      /** @type {HTMLElement} */\n      let lineNumberSizer = element.querySelector('.line-numbers-sizer');\n      const codeLines = codeElement.textContent.split(NEW_LINE_EXP);\n\n      if (!lineNumberSizer) {\n        lineNumberSizer = document.createElement('span');\n        lineNumberSizer.className = 'line-numbers-sizer';\n\n        codeElement.appendChild(lineNumberSizer);\n      }\n\n      lineNumberSizer.innerHTML = '0';\n      lineNumberSizer.style.display = 'block';\n\n      const oneLinerHeight = lineNumberSizer.getBoundingClientRect().height;\n      lineNumberSizer.innerHTML = '';\n\n      return {\n        element,\n        lines: codeLines,\n        lineHeights: [],\n        oneLinerHeight,\n        sizer: lineNumberSizer\n      };\n    })\n    .filter(Boolean);\n\n  for (let a = 0, l = infos.length; a < l; a += 1) {\n    const info = infos[a];\n    const lineNumberSizer = info.sizer;\n    const { lines } = info;\n    const { lineHeights } = info;\n    const { oneLinerHeight } = info;\n    const wrapper = info.element.querySelector('.line-numbers-rows');\n\n    lineHeights[lines.length - 1] = undefined;\n\n    for (let i = 0, ll = lines.length; i < ll; i += 1) {\n      const line = lines[i];\n      if (line && line.length > 1) {\n        const e = lineNumberSizer.appendChild(document.createElement('span'));\n        e.style.display = 'block';\n        e.textContent = line;\n        const { height } = e.getBoundingClientRect();\n        wrapper.children[i].style.height = `${height}px`;\n      } else {\n        lineHeights[i] = oneLinerHeight;\n      }\n    }\n\n    lineNumberSizer.style.display = 'none';\n    lineNumberSizer.innerHTML = '';\n  }\n}\n\nexport { resizeElements };\n","import React from 'react';\n\nconst CatLoader = () => (\n  <div className=\"cat-container\">\n    <div className=\"cat-loader cat-size-md\">\n      <div className=\"cat-lower\">\n        <div className=\"wrapper bkg-stretch\">\n          <div />\n        </div>\n        <div className=\"wrapper cat-jj\">\n          <div />\n        </div>\n        <div className=\"wrapper bkg\">\n          <div />\n        </div>\n        <div className=\"wrapper cat-ass\">\n          <div />\n        </div>\n        <div className=\"wrapper inner-leg\">\n          <div className=\"cat-leg\">\n            <div />\n          </div>\n        </div>\n        <div className=\"wrapper outer-leg\">\n          <div className=\"cat-leg\">\n            <div />\n          </div>\n        </div>\n      </div>\n      <div className=\"cat-upper\">\n        <div className=\"wrapper bkg-stretch\">\n          <div />\n        </div>\n        <div className=\"wrapper cat-face\">\n          <div className=\"face-shape\">\n            <div />\n          </div>\n          <div className=\"ears\" />\n          <div className=\"wisker\">\n            <div />\n            <div />\n          </div>\n          <div className=\"eyes\" />\n          <div className=\"mouth\">\n            <div>\n              <div>\n                <div />\n              </div>\n              <div>\n                <div />\n              </div>\n            </div>\n            <div />\n          </div>\n        </div>\n        <div className=\"wrapper body\" />\n        <div className=\"wrapper inner-leg\">\n          <div className=\"cat-leg\">\n            <div />\n          </div>\n        </div>\n        <div className=\"wrapper outer-leg\">\n          <div className=\"cat-leg\">\n            <div />\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nCatLoader.propTypes = {};\n\nexport default CatLoader;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport CatLoader from 'components/CatLoader';\n\nconst CommentForm = ({ slug, className }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [confirmationMessage, setConfirmationMessage] = useState('');\n\n  const resetInputData = () => {\n    setName('');\n    setEmail('');\n    setMessage('');\n  };\n\n  const handleSubmission = async () => {\n    setIsLoading(true);\n    setConfirmationMessage('');\n\n    if (name === '' || email === '' || message === '') {\n      setIsLoading(false);\n      setConfirmationMessage('Uh oh. Did you miss something?');\n    } else {\n      fetch('https://comments.zanechua.com/api/handle/form', {\n        method: 'POST',\n        body: JSON.stringify({\n          fields: {\n            slug,\n            name,\n            email,\n            message\n          }\n        }),\n        headers: { 'Content-Type': 'application/json' }\n      })\n        .then(response => {\n          if (response.status === 200 || response.status === 201) {\n            resetInputData();\n            setConfirmationMessage(\n              'Thanks! Your comment will be published after it has been reviewed.'\n            );\n          } else {\n            setConfirmationMessage('Something went wrong.');\n          }\n          setIsLoading(false);\n        })\n        .catch(() => {\n          setIsLoading(false);\n          setConfirmationMessage('An error occurred when posting your comment');\n        });\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <section className={className}>\n        <div className=\"comment-form-container bg-gray-800 p-6\">\n          <h3 className=\"font-bold text-center pb-2\">Processing your comment!</h3>\n          <CatLoader />\n        </div>\n      </section>\n    );\n  }\n\n  return (\n    <section className={className}>\n      <h1 className=\"text-2xl font-bold pb-4\">Leave a comment</h1>\n      <div className=\"comment-form-container bg-gray-800 p-6\">\n        <form className=\"rounded mb-4\">\n          <input id=\"fields[slug]\" type=\"hidden\" value={slug} />\n          <div className=\"mb-4\">\n            <label className=\"block text-sm font-bold mb-2\" htmlFor=\"fields[name]\">\n              Name *\n            </label>\n            <input\n              className=\"shadow appearance-none border rounded w-full text-black py-2 px-3 leading-tight focus:outline-none focus:shadow-outline\"\n              id=\"fields[name]\"\n              type=\"text\"\n              placeholder=\"Name\"\n              onChange={({ target: { value } }) => {\n                setName(value);\n              }}\n              value={name}\n            />\n          </div>\n          <div className=\"mb-4\">\n            <label className=\"block text-sm font-bold mb-2\" htmlFor=\"fields[email]\">\n              Email *\n            </label>\n            <input\n              className=\"shadow appearance-none border rounded w-full text-black py-2 px-3 leading-tight focus:outline-none focus:shadow-outline\"\n              id=\"fields[email]\"\n              type=\"text\"\n              placeholder=\"Email\"\n              onChange={({ target: { value } }) => {\n                setEmail(value);\n              }}\n              value={email}\n            />\n          </div>\n          <div className=\"mb-4\">\n            <label className=\"block text-sm font-bold mb-2\" htmlFor=\"fields[message]\">\n              Message *\n            </label>\n            <div\n              data-replicated-value={message}\n              className=\"grid after:whitespace-pre-wrap after:invisible after:content-[attr(data-replicated-value)] after:[grid-area:1/1/2/2]\">\n              <textarea\n                className=\"shadow appearance-none border rounded w-full text-black py-2 px-3 leading-tight resize-none overflow-hidden [grid-area:1/1/2/2] focus:outline-none focus:shadow-outline\"\n                id=\"fields[message]\"\n                placeholder=\"Message\"\n                rows={6}\n                onInput={({ target: { value } }) => {\n                  setMessage(value);\n                }}\n                value={message}\n              />\n            </div>\n          </div>\n          <div className=\"flex items-center justify-between\">\n            <button\n              className=\"flex-1 text-white font-bold rainbow-button p-1\"\n              type=\"button\"\n              onClick={handleSubmission}>\n              <div className=\"bg-gray-800 p-2\">Post Comment</div>\n            </button>\n          </div>\n        </form>\n        <h3>{confirmationMessage}</h3>\n      </div>\n    </section>\n  );\n};\n\nCommentForm.propTypes = {\n  className: PropTypes.string,\n  slug: PropTypes.string.isRequired\n};\n\nCommentForm.defaultProps = {\n  className: ''\n};\n\nexport default CommentForm;\n","// FNV_PRIMES and FNV_OFFSETS from\n// http://www.isthe.com/chongo/tech/comp/fnv/index.html#FNV-param\n\nconst FNV_PRIMES = {\n\t32: 16_777_619n,\n\t64: 1_099_511_628_211n,\n\t128: 309_485_009_821_345_068_724_781_371n,\n\t256: 374_144_419_156_711_147_060_143_317_175_368_453_031_918_731_002_211n,\n\t512: 35_835_915_874_844_867_368_919_076_489_095_108_449_946_327_955_754_392_558_399_825_615_420_669_938_882_575_126_094_039_892_345_713_852_759n,\n\t1024: 5_016_456_510_113_118_655_434_598_811_035_278_955_030_765_345_404_790_744_303_017_523_831_112_055_108_147_451_509_157_692_220_295_382_716_162_651_878_526_895_249_385_292_291_816_524_375_083_746_691_371_804_094_271_873_160_484_737_966_720_260_389_217_684_476_157_468_082_573n,\n};\n\nconst FNV_OFFSETS = {\n\t32: 2_166_136_261n,\n\t64: 14_695_981_039_346_656_037n,\n\t128: 144_066_263_297_769_815_596_495_629_667_062_367_629n,\n\t256: 100_029_257_958_052_580_907_070_968_620_625_704_837_092_796_014_241_193_945_225_284_501_741_471_925_557n,\n\t512: 9_659_303_129_496_669_498_009_435_400_716_310_466_090_418_745_672_637_896_108_374_329_434_462_657_994_582_932_197_716_438_449_813_051_892_206_539_805_784_495_328_239_340_083_876_191_928_701_583_869_517_785n,\n\t1024: 14_197_795_064_947_621_068_722_070_641_403_218_320_880_622_795_441_933_960_878_474_914_617_582_723_252_296_732_303_717_722_150_864_096_521_202_355_549_365_628_174_669_108_571_814_760_471_015_076_148_029_755_969_804_077_320_157_692_458_563_003_215_304_957_150_157_403_644_460_363_550_505_412_711_285_966_361_610_267_868_082_893_823_963_790_439_336_411_086_884_584_107_735_010_676_915n,\n};\n\nconst cachedEncoder = new globalThis.TextEncoder();\n\nfunction fnv1aUint8Array(uint8Array, size) {\n\tconst fnvPrime = FNV_PRIMES[size];\n\tlet hash = FNV_OFFSETS[size];\n\n\t// eslint-disable-next-line unicorn/no-for-loop -- This is a performance-sensitive loop\n\tfor (let index = 0; index < uint8Array.length; index++) {\n\t\thash ^= BigInt(uint8Array[index]);\n\t\thash = BigInt.asUintN(size, hash * fnvPrime);\n\t}\n\n\treturn hash;\n}\n\nfunction fnv1aEncodeInto(string, size, utf8Buffer) {\n\tif (utf8Buffer.length === 0) {\n\t\tthrow new Error('The `utf8Buffer` option must have a length greater than zero');\n\t}\n\n\tconst fnvPrime = FNV_PRIMES[size];\n\tlet hash = FNV_OFFSETS[size];\n\tlet remaining = string;\n\n\twhile (remaining.length > 0) {\n\t\tconst result = cachedEncoder.encodeInto(remaining, utf8Buffer);\n\t\tremaining = remaining.slice(result.read);\n\t\tfor (let index = 0; index < result.written; index++) {\n\t\t\thash ^= BigInt(utf8Buffer[index]);\n\t\t\thash = BigInt.asUintN(size, hash * fnvPrime);\n\t\t}\n\t}\n\n\treturn hash;\n}\n\nexport default function fnv1a(value, {size = 32, utf8Buffer} = {}) {\n\tif (!FNV_PRIMES[size]) {\n\t\tthrow new Error('The `size` option must be one of 32, 64, 128, 256, 512, or 1024');\n\t}\n\n\tif (typeof value === 'string') {\n\t\tif (utf8Buffer) {\n\t\t\treturn fnv1aEncodeInto(value, size, utf8Buffer);\n\t\t}\n\n\t\tvalue = cachedEncoder.encode(value);\n\t}\n\n\treturn fnv1aUint8Array(value, size);\n}\n","import React from 'react';\nimport fnv1a from '@sindresorhus/fnv1a';\nimport PropTypes from 'prop-types';\n\nconst Comment = ({ comment }) => {\n  const renderMessage = commentMessage => {\n    const messages = commentMessage.split('\\n');\n    return messages.map((item, index) => (\n      <p\n        key={`${fnv1a(`comment-content-${comment.id}-${index}`, { size: 32 })}`}\n        className=\"whitespace-pre-wrap\">\n        {item}\n      </p>\n    ));\n  };\n\n  return (\n    <div className=\"comment py-3\">\n      <h3 className=\"font-bold pb-2\">{comment.name}</h3>\n      <h4 className=\"font-bold pb-6\">{comment.date}</h4>\n      <div className=\"pb-2\">{renderMessage(comment.message)}</div>\n      <hr />\n    </div>\n  );\n};\n\nComment.propTypes = {\n  comment: PropTypes.shape({\n    id: PropTypes.string,\n    slug: PropTypes.string,\n    name: PropTypes.string,\n    date: PropTypes.string,\n    message: PropTypes.string\n  }).isRequired\n};\n\nexport default Comment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Comment from 'components/Comment';\n\nconst CommentSection = ({ comments: { edges }, className }) => {\n  const Comments = edges.map(edge => <Comment key={edge.node.id} comment={edge.node} />);\n\n  return (\n    <section className={className}>\n      <h1 className=\"text-2xl font-bold pb-4\">Comments</h1>\n      <div className=\"comment-container bg-gray-800 p-6\">{Comments}</div>\n    </section>\n  );\n};\n\nCommentSection.propTypes = {\n  className: PropTypes.string,\n  comments: PropTypes.shape({\n    edges: PropTypes.array\n  }).isRequired\n};\n\nCommentSection.defaultProps = {\n  className: ''\n};\n\nexport default CommentSection;\n","import React, { useEffect } from 'react';\nimport { useWindowSize } from '@react-hook/window-size';\nimport { format } from 'date-fns';\nimport { graphql } from 'gatsby';\nimport { GatsbyImage, getImage, getSrc } from 'gatsby-plugin-image';\nimport { resizeElements } from 'lib/prism-multiline-numbers';\nimport { last } from 'lodash';\nimport PropTypes from 'prop-types';\n\nimport CommentForm from 'components/CommentForm';\nimport CommentSection from 'components/CommentSection';\nimport Layout from 'components/Layout';\nimport SEO from 'components/SEO';\nimport TagLink from 'components/TagLink';\n\n// the data prop will be injected by the GraphQL query below.\nconst BlogPostTemplate = ({ data }) => {\n  const [width, height] = useWindowSize();\n  const { posts, comments } = data; // data.posts holds your post data\n  const { timeToRead, frontmatter, html, headings } = posts;\n  const { tags } = frontmatter;\n  const updatedAtArray = frontmatter?.updatedAt;\n  const lastUpdatedAt = Array.isArray(updatedAtArray)\n    ? format(new Date(last(updatedAtArray)), 'dd MMMM, yyyy')\n    : null;\n\n  const featuredImg = getImage(frontmatter.featuredImage);\n\n  useEffect(() => {\n    resizeElements(Array.prototype.slice.call(document.querySelectorAll('pre.line-numbers')));\n  }, [width, height]);\n\n  useEffect(() => {\n    // create an Observer instance\n    const resizeObserver = new ResizeObserver(() => {\n      resizeElements(Array.prototype.slice.call(document.querySelectorAll('pre.line-numbers')));\n    });\n\n    resizeObserver.disconnect();\n    const contentElement = document.getElementById('post-content');\n    // start observing a DOM node\n    resizeObserver.observe(contentElement);\n  }, []);\n\n  return (\n    <Layout className=\"blog-post-container\">\n      <nav className=\"blog-post-fast-nav fixed transform right-0 mr-4 space-y-2 hidden border-solid border-l-2 pl-2 border-white 2xl:flex 2xl:flex-col\">\n        {headings.map(heading => (\n          <a href={`#${heading.id}`} key={heading.id} className=\"hover:underline\">\n            {heading.value}\n          </a>\n        ))}\n      </nav>\n      <section className=\"blog-post flex-1\">\n        <div className=\"blog-post-meta mb-4\">\n          <h1 className=\"text-2xl font-bold\">{frontmatter.title}</h1>\n          <div className=\"my-1\">\n            {tags !== null && tags.map(tag => <TagLink key={tag} tag={tag} />)}\n          </div>\n          <h2 className=\"text-sm font-bold\">{`${frontmatter.date} ${\n            lastUpdatedAt ? `• Last Updated at ${lastUpdatedAt}` : ''\n          } • ${timeToRead} min read`}</h2>\n        </div>\n        <div className=\"blog-post-featured-image pb-4\">\n          <GatsbyImage image={featuredImg} alt={frontmatter.title} />\n        </div>\n        <div\n          id=\"post-content\"\n          className=\"blog-post-content markdown\"\n          /* eslint-disable-next-line react/no-danger */\n          dangerouslySetInnerHTML={{ __html: html }}\n        />\n      </section>\n\n      {comments.edges.length >= 1 && (\n        <CommentSection className=\"comment-section flex-1 pt-8\" comments={comments} />\n      )}\n      <CommentForm className=\"comment-form-section flex-1 pt-8\" slug={frontmatter.slug} />\n    </Layout>\n  );\n};\n\nexport const Head = ({ location, data }) => {\n  const { site, posts } = data; // data.posts holds your post data\n  const { frontmatter, excerpt } = posts;\n  const { tags } = frontmatter;\n  const imageLink = getSrc(frontmatter.featuredImage);\n  const {\n    siteMetadata: { siteUrl }\n  } = site;\n\n  return (\n    <SEO keywords={tags} title={frontmatter.title} description={excerpt} path={location.pathname}>\n      <meta name=\"image\" content={`${siteUrl}${imageLink}`} />\n      <meta name=\"og:image\" content={`${siteUrl}${imageLink}`} />\n      <meta name=\"og:image:alt\" content={frontmatter.title} />\n      <meta name=\"twitter:image\" content={`${siteUrl}${imageLink}`} />\n    </SEO>\n  );\n};\n\nexport const pageQuery = graphql`\n  query ($slug: String!) {\n    site: site {\n      siteMetadata {\n        siteUrl\n      }\n    }\n    posts: markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      html\n      headings(depth: h1) {\n        id\n        value\n        depth\n      }\n      excerpt(pruneLength: 250)\n      timeToRead\n      frontmatter {\n        date(formatString: \"DD MMMM, YYYY\")\n        updatedAt\n        slug\n        title\n        tags\n        featuredImage {\n          childImageSharp {\n            gatsbyImageData\n          }\n        }\n      }\n    }\n    comments: allCommentsYaml(\n      filter: { slug: { eq: $slug }, name: { ne: \"root\" } }\n      sort: { date: ASC }\n    ) {\n      edges {\n        node {\n          id\n          slug\n          name\n          date(formatString: \"DD MMMM, YYYY [at] h:MM A\")\n          message\n        }\n      }\n    }\n  }\n`;\n\nBlogPostTemplate.propTypes = {\n  data: PropTypes.shape({\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        siteUrl: PropTypes.string\n      })\n    }),\n    comments: PropTypes.shape({\n      edges: PropTypes.array\n    }),\n    posts: PropTypes.shape({\n      html: PropTypes.string,\n      excerpt: PropTypes.string,\n      timeToRead: PropTypes.number,\n      frontmatter: PropTypes.shape({\n        slug: PropTypes.string,\n        title: PropTypes.string,\n        tags: PropTypes.arrayOf(PropTypes.string),\n        date: PropTypes.string,\n        featuredImage: PropTypes.shape({\n          childImageSharp: PropTypes.shape({\n            gatsbyImageData: PropTypes.any\n          })\n        })\n      })\n    })\n  }).isRequired\n};\n\nexport default BlogPostTemplate;\n"],"names":["module","exports","array","length","undefined","current","storedValue","useDebounceCallback","callback","wait","leading","storedCallback","timeout","deps","_ref","clearTimeout","_ref2","args","arguments","setTimeout","apply","target","type","listener","cleanup","storedListener","storedCleanup","targetEl","didUnsubscribe","this","addEventListener","removeEventListener","emptyObj","win","window","wv","visualViewport","getSize","document","documentElement","clientWidth","clientHeight","useWindowSize","options","initialWidth","initialHeight","size","setDebouncedSize","initialState","state","useDebounce","setSize","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","width","String","defaultWidth","formats","formatLong","date","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","value","valuesArray","context","formattingValues","defaultFormattingWidth","values","argumentCallback","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","key","Array","isArray","predicate","findIndex","pattern","test","object","Object","prototype","hasOwnProperty","call","findKey","valueCallback","rest","slice","enUS","code","formatDistance","token","count","result","tokenValue","replace","toString","addSuffix","comparison","formatRelative","_date","_baseDate","_options","localize","ordinalNumber","dirtyNumber","number","Number","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","parsePattern","parseInt","parseResult","any","index","weekStartsOn","firstWeekContainsDate","defaultOptions","getDefaultOptions","Math","pow","millisecondsInWeek","millisecondsInDay","constructFromSymbol","Symbol","for","constructFrom","Date","constructor","toDate","argument","getTimezoneOffsetInMilliseconds","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","startOfDay","in","setHours","differenceInCalendarDays","laterDate","earlierDate","laterDate_","earlierDate_","dates","normalize","bind","find","map","normalizeDates","laterStartOfDay","earlierStartOfDay","laterTimestamp","earlierTimestamp","round","startOfYear","date_","setFullYear","getDayOfYear","startOfWeek","locale","getDay","diff","setDate","startOfISOWeek","getISOWeekYear","year","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getTime","startOfISOWeekYear","fourthOfJanuary","getISOWeek","getWeekYear","firstWeekOfNextYear","firstWeekOfThisYear","startOfWeekYear","firstWeek","getWeek","addLeadingZeros","targetLength","abs","padStart","lightFormatters","y","signedYear","M","d","a","dayPeriodEnumValue","toUpperCase","h","H","m","s","S","numberOfDigits","milliseconds","trunc","dayPeriodEnum","formatters","G","unit","Y","signedWeekYear","weekYear","R","u","Q","ceil","q","L","w","week","I","isoWeek","D","dayOfYear","E","dayOfWeek","e","localDayOfWeek","c","i","isoDayOfWeek","toLowerCase","b","hours","B","K","k","X","_localize","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","T","offset","delimiter","sign","absOffset","minutes","dateLongFormatter","timeLongFormatter","longFormatters","p","P","datePattern","timePattern","dateTimeFormat","dayOfYearTokenRE","weekYearTokenRE","throwTokens","isDate","isValid","isNaN","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","format","formatStr","originalDate","RangeError","parts","substring","firstCharacter","longFormatter","join","isToken","cleanEscapedString","preprocessor","formatterOptions","part","useAdditionalWeekYearTokens","isProtectedWeekYearToken","useAdditionalDayOfYearTokens","isProtectedDayOfYearToken","input","_message","subject","message","console","warn","includes","warnOrThrowProtectedError","formatter","matched","NEW_LINE_EXP","resizeElements","elementToResize","elements","filter","element","whiteSpace","getComputedStyle","currentStyle","infos","codeElement","querySelector","lineNumbersWrapper","lineNumberSizer","codeLines","textContent","split","createElement","className","appendChild","innerHTML","style","display","oneLinerHeight","getBoundingClientRect","height","lines","lineHeights","sizer","Boolean","l","info","wrapper","ll","line","children","CatLoader","React","CommentForm","slug","isLoading","setIsLoading","useState","name","setName","email","setEmail","setMessage","confirmationMessage","setConfirmationMessage","id","htmlFor","placeholder","onChange","_ref3","rows","onInput","_ref4","onClick","async","fetch","method","body","JSON","stringify","fields","headers","then","response","status","catch","defaultProps","FNV_PRIMES","FNV_OFFSETS","cachedEncoder","globalThis","TextEncoder","fnv1a","utf8Buffer","Error","fnvPrime","hash","remaining","encodeInto","read","written","BigInt","asUintN","fnv1aEncodeInto","encode","uint8Array","fnv1aUint8Array","comment","item","CommentSection","comments","edges","Comments","edge","Comment","node","Head","location","data","site","posts","frontmatter","excerpt","tags","imageLink","getSrc","featuredImage","siteMetadata","siteUrl","SEO","keywords","title","description","path","pathname","content","timeToRead","html","headings","updatedAtArray","updatedAt","lastUpdatedAt","_last","featuredImg","getImage","useEffect","querySelectorAll","resizeObserver","ResizeObserver","disconnect","contentElement","getElementById","observe","Layout","heading","href","tag","TagLink","GatsbyImage","image","alt","dangerouslySetInnerHTML","__html"],"sourceRoot":""}